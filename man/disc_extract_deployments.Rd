% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/disc_extract_deployments.R
\name{disc_extract_deployments}
\alias{disc_extract_deployments}
\title{Extract data for each deployment}
\usage{
disc_extract_deployments(raw = "raw", ids = NULL, deploy.dir = NULL,
  acclimation.time = 5, observation.time = 15, ...)
}
\arguments{
\item{raw}{path to the directory where the raw data and the deployment and leg logs are; by default in a subdirectory called \code{raw} in the current directory.}

\item{ids}{deployment identifiers to extract; if NULL (the default) extract all deployments.}

\item{deploy.dir}{path to the directory containing deployments (and associated options). By default "deployments" in the current directory.}

\item{acclimation.time}{duration of the acclimation time in minutes.}

\item{observation.time}{duration of the observation period (after acclimation) in minutes.}

\item{...}{passed to the various \code{\link{disc_extract}} methods for each sensor.}
}
\description{
Read the leg and deployment logs, read necessary data in the raw data directory, extract data for each deployment based on date and time.
}
\details{
To extract individual deployments from the raw leg data, \code{\link{disc_extract_deployments}}
\enumerate{
  \item{reads data (or descriptive metadata, such as start and stop time, number of records, etc.) from all sensors defined in the \code{leg_log.csv} file;}
  \item{synchronises all these records using the time offsets set in \code{leg_log.csv};}
  \item{reads \code{deployment_log.csv} and extracts the data for each deployment based on the start and stop time.}
}

To read data from a given sensor, \code{disc_extract_deployments} looks for an appropriate method for the generic function \code{\link{disc_read}}, i.e. a function named \code{disc_read.nameofsensor}. This function outputs a \code{data.frame} with at least one column called \code{dateTime} of class \code{\link[base]{POSIXct}} used to account for the offset.

Similarly, to extract data from a given sensor for one deployment, \code{disc_extract_deployments} looks for an appropriate method for \code{\link{disc_extract}}. The default method deals with a \code{data.frame} with a column \code{dateTime}. Other methods can be defined for data that does not fit in a \code{data.frame} (video recordings, audio recodings, etc.)

To read and extract data from a new sensor, one just needs to define an appropriate method for \code{\link{disc_read}} and possibly \code{\link{disc_extract}}. See the help of these two functions to know more about tem
}
\examples{
# get an example dataset included with the package
source <- system.file("extdata", "raw", package = "discr")
dest   <- tempdir()
disc_extract_deployments(raw=source, deploy.dir=dest, width=NULL,
                         acclimation.time=2, observation.time=2,
                         parallel=FALSE)
# NOTE:
# - the warning about deployment 2 being stopped earlier than the expected 2 mins
# - the notice that the compass (cc) has 0 records in deployment 2

system(paste0("ls -R ", dest))
}
\seealso{
\code{\link{disc_read}} and \code{\link{disc_extract}}.
}

